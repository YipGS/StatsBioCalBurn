## reading the data
data = read.table("./data.txt", header=TRUE)
## reading the data
data = read.table("../data.txt", header=TRUE)
## set working directory
setwd("./")
## reading the data
data = read.table("../data.txt", header=TRUE)
## reading the data
data = read.table("./data.txt", header=TRUE)
## set working directory
setwd("StatsBioCalBurn")
## set working directory
setwd("./StatsBioCalBurn")
setwd("C:/Users/dries/OneDrive/Unif/1ste mast bioinf/Statistical methods for bioinformatics/StatsBioCalBurn/Rcode")
## set working directory
setwd("./Rcode")
## reading the data
data = read.table("./data.txt", header=TRUE)
data <- read_table2("C:/Users/dries/OneDrive/Unif/1ste mast bioinf/Statistical methods for bioinformatics/StatsBioCalBurn/data.txt")
## reading the data
library(readr)
data = read_table2("C:/Users/dries/OneDrive/Unif/1ste mast bioinf/Statistical methods for bioinformatics/StatsBioCalBurn/data.txt")
data = read_table2("../data.txt")
data = read_table2("./data.txt")
View(data)
data = read_table2("../data.txt")
View(data)
View(data)
view(data)
summary(data)
## creating descriptive stats
descriptiveData = stat.desc(data)
## creating descriptive stats
descriptiveData = stat(data)
## creating descriptive stats
descriptiveData = stat.desc(kalama[,c("age","height")],basic=TRUE, desc=TRUE)
## creating descriptive stats
descriptiveData = stat.desc(data, basic=TRUE, desc=TRUE)
## creating descriptive stats
library(stats)
descriptiveData = stat.desc(data, basic=TRUE, desc=TRUE)
## creating descriptive stats
library(pastecs)
head(data)
## creating descriptive stats
descriptiveData = summary(data)
descriptiveData
descriptiveData.Min
descriptiveData:min()
descriptiveData
## creating descriptive stats
install.packages("pastecs")
library(pastecs)
descriptiveData = stat.desc(data)
View(descriptiveData)
## creating visual aid for data analysis
install.packages("ggpubr")
library(ggpubr)
View(data)
ggboxplot(data, y="weight")
ggboxplot(data, y=c("weight", "calhour", "calories"))
ggboxplot(data, y="weight")
ggboxplot(data, y=c("weight", "calhour", "calories"), combine=TRUE)
# A separate boxplot per variable
ggboxplot(data, y="weight")
ggboxplot(data, y="calhour")
ggboxplot(data, y="calories")
# A separate boxplot per variable
ggboxplot(data, y="weight", xlab="")
# A combined boxplot for a variables
ggboxplot(data, y=c("weight", "calhour", "calories"), combine=TRUE)
## estimating correlations
correlation_weight_calhour = cor(data$weight, data$calhour)
correlation_weight_calories = cor(data$weight, data$calories)
correlation_calories_calhour = cor(data$calories, data$calhour)
# Scatterplots for the data
pairs(~weight+calhour+calories, data=data)
lm(~weight+calour+calories, data=data)
lm(~weight+calhour+calories, data=data)
lm(weight~calories, data=data)
lm_weight_calories = lm(weight~calories, data=data)
View(lm_weight_calories)
library(rgl)
install.packages(rgl)
install.packages("rgl")
library(rgl)
plot3d(data$weight, data$calhour, data$calories)
# Scatterplots for the data
pairs(~weight+calhour+calories, data=data, lm=TRUE)
# Scatterplots for the data
pairs(~weight+calhour+calories, data=data, lm)
data = na.omit(data)
View(data)
# Scatterplots for the data
pairs(~weight+calhour+calories, data=data, lm)
# Scatterplots for the data
pairs(~weight+calhour+calories, data=data, lm=TRUE)
warnings()
# Scatterplots for the data
pairs(~weight+calhour+calories, data=data, method="pearson",lm=TRUE)
